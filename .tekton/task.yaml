apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc
      - name: repository
        description: the git repo
      - name: revision
        description: the revision
        default: master
      - name: apikey
        description: the ibmcloud api key
      - name: api
        description: the ibmcloud api endpoint
        default: "https://cloud.ibm.com"
      - name: registryNamespace
        description: the ibmcloud registry namespace
      - name: imageName
        description: the base image name
        default: "hello-containers-tekton"
      - name: registryRegion
        description: the ibmcloud registry region     
      - name: vaultName
        description: The Key Protect instance name
      - name: buildSigner
        description: The build signer name
      - name: validationSigner
        description: The validation signer name
      - name: resourceGroup
        description: The resource group   
  steps:
    - name: clone-repo
      image: alpine/git
      env:
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: REVISION
          value: $(inputs.params.revision)
      command: ["/bin/sh", "-c"]
      args:
        - set -e -o pipefail;
          echo "Cloning $REPOSITORY";
          git clone -q -b $REVISION $REPOSITORY .;
    - name: build-docker-image
      image: ibmcom/pipeline-base-image
      env:
        - name: IBMCLOUD_API_KEY
          value: $(inputs.params.apikey)
        - name: API
          value: $(inputs.params.api)
        - name: REGION
          value: $(inputs.params.registryRegion)
        - name: HOME
          value: "/root"
        - name: REGISTRY_NAMESPACE
          value: $(inputs.params.registryNamespace)
        - name: VAULT_NAME
          value: $(inputs.params.vaultName)
        - name: BUILD_SIGNER
          value: $(inputs.params.buildSigner)
        - name: VALIDATION_SIGNER
          value: $(inputs.params.validationSigner)
        - name: RESOURCE_GROUP
          value: $(inputs.params.resourceGroup)
        - name: IMAGE_NAME
          value: $(inputs.params.imageName)
        - name: ARCHIVE_DIR
          value: "/artifacts"
        - name: BUILD_NUMBER
          value: "0"
        - name: GIT_BRANCH
          value: $(inputs.params.revision)
      command: ["/bin/bash", "-c"]
      args:
        - set -e -o pipefail;
          echo "TEST INPUT VAULES";
          echo "$IBMCLOUD_API_KEY";
          echo "$API";
          echo "$VAULT_NAME";
          echo "$BUILD_SIGNER";
          ibmcloud login -a $API -r $REGION;
          export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh";
          export GIT_COMMIT=$(git rev-parse HEAD);
          export REGISTRY_URL=$(ibmcloud cr info | sed "2q;d" | awk '{for(i=1;i<=NF;i++) if ($i=="Registry") print $(i+1)}');
          source build-docker-image.sh;
      volumeMounts:
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
      
